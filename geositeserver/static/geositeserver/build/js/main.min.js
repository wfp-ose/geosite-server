var geosite={init:{},directives:{},controllers:{},filters:{},vecmath:{},tilemath:{},api:{},listeners:{}};geosite.init.listeners=function(){$("body").on("click",".btn-clear",function(e){var t=$(this).data("clear");$(t).each(function(){var e=$(this);if(e.val(null),void 0!=e.data("backend")){var t=$("#"+e.data("backend"));t.val(null),t.trigger("input"),t.change()}})}),$("body").on("click",".geosite-intent",function(e){e.preventDefault();var t=$(this),a=angular.element("[ng-controller="+t.data("intent-ctrl")+"]").scope();if(t.hasClass("geosite-toggle"))t.hasClass("geosite-off")?(t.removeClass("geosite-off"),geosite.api.intend(t.data("intent-names")[0],t.data("intent-data"),a)):(t.addClass("geosite-off"),geosite.api.intend(t.data("intent-names")[1],t.data("intent-data"),a));else if(t.hasClass("geosite-radio")){var n=t.parents(".geosite-radio-group:first").find(".geosite-radio").not(t);t.hasClass("geosite-on")||(t.addClass("geosite-on"),t.data("intent-class-on")&&(t.addClass(t.data("intent-class-on")),n.removeClass(t.data("intent-class-on"))),n.removeClass("geosite-on"),t.data("intent-class-off")&&(t.removeClass(t.data("intent-class-off")),n.addClass(t.data("intent-class-off"))),geosite.api.intend(t.data("intent-name"),t.data("intent-data"),a))}else geosite.api.intend(t.data("intent-name"),t.data("intent-data"),a)})},geosite.api.welcome=function(e){e=e||{};var t=e.$scope||e.scope||angular.element("#geosite-main").scope(),a={id:"geosite-modal-welcome",dynamic:{},"static":{welcome:t.map_config.welcome}};geosite.api.intend("toggleModal",a,t)},geosite.api.intend=function(e,t,a){a.$emit(e,t)},geosite.assert_float=function(e,t){return void 0===e||""===e?t:angular.isNumber(e)?e:parseFloat(e)},geosite.assert_array_length=function(e,t,a){return void 0===e||""===e?a:angular.isString(e)?(e=e.split(","),e.length==t?e:a):angular.isArray(e)?e.length==t?e:a:void 0},geosite.api.opt=function(e,t,a,n){if(void 0!=e){if($.isArray(t)){for(var i=void 0,o=0;o<t.length&&(i=e[t[o]],void 0==i);o++);return i||a||n}return e[t]||a||n}return a||n},geosite.api.opt_i=function(e,t,a){return geosite.api.opt(e,t,a,0)},geosite.api.opt_s=function(e,t,a){return geosite.api.opt(e,t,a,"")},geosite.api.opt_b=function(e,t,a){return geosite.api.opt(e,t,a,!1)},geosite.api.opt_j=function(e,t,a){return geosite.api.opt(e,t,a,{})},geosite.api.normalize_feature=function(e){var e={attributes:e.attributes||e.properties,geometry:e.geometry};return e},geosite.api.flatten=function(e,t){var a={};return $.each(e,function(e,n){var i=void 0!=t?t+"__"+e:e;void 0===n||null===n||angular.isString(n)||angular.isNumber(n)||angular.isArray(n)||"boolean"==typeof n?a[i]=n:$.each(geosite.api.flatten(n,i),function(e,t){a[e]=t})}),a},geosite.api.unpack=function(e){var t={};return $.each(e,function(a,n){if(-1==a.indexOf("__"))t[a]=n;else{for(var i=a.split("__"),o=e,l=0;l<i.length;l++){var r=i[l];r in o||(o[r]={}),o=o[r]}o[i[i.length-1]]=n}}),t},geosite.listeners.toggleModal=function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.id,i=t.modal||{};i.show=!1;var o=angular.element("#"+n).scope(),l={state:a.state};"static"in t&&(l=$.extend(l,t["static"])),"dynamic"in t&&$.each(t.dynamic,function(t,a){angular.isString(a)?"map_config"==a?l[t]=map_config:"state"==a&&(l[t]=l.state):angular.isArray(a)?"source"==a[0]?l[t]=extract(a.slice(1),e.targetScope):"map_config"==a[0]?l[t]=extract(a.slice(1),map_config):"state"==a[0]&&(l[t]=extract(a.slice(1),l.state)):l[t]=a}),o.$apply(function(){o=$.extend(o,l),setTimeout(function(){var e=$("#"+n),t=o.tab;void 0!=t?(e.find(".nav-tabs li").each(function(){var e=$(this),a=e.find("a").attr("href").substring(1);t==a?e.addClass("active"):e.removeClass("active")}),e.find(".tab-pane").each(function(){var e=$(this);t==e.attr("id")?e.addClass("in active"):e.removeClass("in active")})):(e.find(".nav-tabs li").slice(0,1).addClass("active"),e.find(".nav-tabs li").slice(1).removeClass("active"),e.find(".tab-pane").slice(0,1).addClass("in active"),e.find(".tab-pane").slice(1).removeClass("in active")),$("#"+n).modal(i),$("#"+n).modal("toggle")},0)})},geosite.init_controller_base=function(e){e.controller("GeositeControllerBase",geosite.controllers.controller_base)},geosite.init_controller=function(e,t,a){var n=e.data("controllerName")||e.attr("id");t.controller(n,a||geosite.controllers.controller_base)},geosite.init_controllers=function(e,t,a){for(var n=0;n<a.length;n++){var i=a[n];$(i.selector,e).each(function(){try{geosite.init_controller($(this),t,i.controller)}catch(e){console.log('Could not load Geosite Controller "'+i.selector+'"',e)}})}},geosite.vecmath={},geosite.vecmath.distance=function(e,t){var a=L.Projection.SphericalMercator;if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return a.project(e).distanceTo(a.project(t));var n=void 0;return $.each(t._layers,function(t,i){var o=i._latlngs,l=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(o[l]),a.project(o[l+1])),l++);l<o.length-1;l++){var r=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(o[l]),a.project(o[l+1]));n>r&&(n=r)}}),n},geosite.vecmath.closestLocation=function(e,t){if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return t;var a=L.Projection.SphericalMercator,n=void 0,i=void 0;return $.each(t._layers,function(t,o){var l=o._latlngs,r=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(l[r]),a.project(l[r+1])),i=L.LineUtil.closestPointOnSegment(a.project(e),a.project(l[r]),a.project(l[r+1])),r++);r<l.length-1;r++){var s=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(l[r]),a.project(l[r+1]));n>s&&(n=s,i=L.LineUtil.closestPointOnSegment(a.project(e),a.project(l[r]),a.project(l[r+1])))}}),a.unproject(i)},geosite.vecmath.getClosestFeatureAndLocation=function(e,t){var a=void 0,n=0,i=void 0;if(void 0!=e&&e.length>0){a=e[0],n=geosite.vecmath.distance(t,e[0].geometry),i=geosite.vecmath.closestLocation(t,e[0].geometry);for(var o=1;o<e.length;o++){var l=e[o];geosite.vecmath.distance(t,l.geometry)<n&&(a=l,n=geosite.vecmath.distance(t,l.geometry),i=geosite.vecmath.closestLocation(t,l.geometry))}}return{feature:a,location:i}},geosite.init_state=function(e,t){var a=$.extend({},e),n=getHashValueAsFloat(["latitude","lat","y"])||e.lat||0,i=getHashValueAsFloat(["longitude","lon","long","lng","x"])||e.lon||0,o=getHashValueAsInteger(["zoom","z"])||e.z||3,l={lat:n,lon:i,z:o};return a.view=void 0!=a.view?$.extend(a.view,l):l,void 0!=a.filters&&$.each(a.filters,function(e,n){$.each(n,function(n,i){var o=t.filters[e][n].toLowerCase(),l=getHashValue(e+":"+n,o);void 0!=l&&""!=l&&(a.filters[e][n]=l)})}),void 0!=a.styles,a},geosite.ui_init_slider_label=function(e,t,a,n,i){if("ordinal"==a){var o={value:i};t.data("label").html(e(t.data("label-template"))(o))}else if("continuous"==a)if("boolean"==$.type(n)&&n||"true"==n.toLowerCase()){var o={values:[i[0],i[1]]};t.data("label").html(e(t.data("label-template"))(o))}else if("min"==n||"max"==n){var o={value:i};t.data("label").html(e(t.data("label-template"))(o))}},geosite.ui_init_slider_slider=function(e,t,a,n,i,o,l,r,s){"ordinal"==n?a.slider({range:"boolean"==$.type(i)&&i||"true"==i.toLowerCase()?!0:i,value:o,min:0,max:r,step:1,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),l=a.data("options")[i.value],r={};r[o]=l,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:r},t)}}):"continuous"==n&&("boolean"==$.type(i)&&i||"true"==i.toLowerCase()?a.slider({range:!0,values:o,min:l,max:r,step:s,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),l=i.values,r={};r[o]=l,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:r},t)}}):"min"!=i&&"max"!=i||a.slider({range:i,value:o,min:l,max:r,step:s,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),l=i.value/100,r={};r[o]=l,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:r},t)}}))},geosite.ui_update_slider_label=function(e,t,a){var n=$(this),i=n.data("type"),o=n.data("range");if("ordinal"==i){var l={value:n.data("options")[a.value]};n.data("label").html(e(n.data("label-template"))(l))}else if("continuous"==i)if("boolean"==$.type(o)&&o||"true"==o.toLowerCase()){var l={values:[a.values[0],a.values[1]]};n.data("label").html(e(n.data("label-template"))(l))}else if("min"==o||"max"==o){var l={value:a.value/100};n.data("label").html(e(n.data("label-template"))(l))}};var getHashValue=function(e,t){var a=void 0;e="string"==typeof e?[e.toLowerCase()]:$.map(e,function(e,t){return e.toLowerCase()});for(var n=location.hash.toLowerCase(),i=0;i<e.length;i++){var o=e[i],l=n.match(new RegExp(o+"=([^&]*)"));if(l&&(a=l[1],void 0!=a&&null!=a&&""!=a))break}if(void 0!=t)if("integer"==t)a=void 0!=a&&null!=a&&""!=a?parseInt(a,10):void 0;else if("stringarray"==t){if(void 0!=a){var r=a.split(",");a=r}}else if("integerarray"==t){if(void 0!=a){for(var s=a.split(","),r=[],i=0;i<s.length;i++){var d=s[i];r.push(void 0!=d&&null!=d&&""!=d?parseInt(d,10):void 0)}a=r}}else if("float"==t)a=void 0!=a&&null!=a&&""!=a?parseFloat(a):void 0;else if("floatarray"==t&&void 0!=a){for(var s=a.split(","),r=[],i=0;i<s.length;i++){var d=s[i];r.push(void 0!=d&&null!=d&&""!=d?parseFloat(d):void 0)}a=r}return a},hasHashValue=function(e){var t=getHashValue(e);return void 0!=t&&null!=t&&""!=t},getHashValueAsStringArray=function(e){return getHashValue(e,"stringarray")},getHashValueAsInteger=function(e){return getHashValue(e,"integer")},getHashValueAsIntegerArray=function(e){return getHashValue(e,"integerarray")},getHashValueAsFloat=function(e){return getHashValue(e,"float")},sortLayers=function(e,t){var a=$.isArray(e)?e:$.map(e,function(e){return e});return a=a.sort(function(e,t){return e.options.renderOrder-t.options.renderOrder}),t===!0&&a.reverse(),a},updateRenderOrder=function(e){for(var t=0;t<e.length;t++)e[t].bringToFront()},layersAsArray=function(e){return $.map(e,function(e,t){return{id:t,layer:e}})},extract=function(e,t){var a=void 0;if(0==e.length)a=t;else if(void 0!=t){var n=e.slice(1),i=Array.isArray(t)?t[e[0]]:t[""+e[0]];a=extract(n,i)}return a};geosite.codec={},geosite.codec.parseFeatures=function(e,t){var a=[];return $(e).find("gml\\:featuremember").each(function(){var e=$(this).children(),n=e.prop("tagName").toLowerCase(),i=geosite.codec.parseAttributes(e,t[n]),o=e.find("geonode\\:shape"),l=void 0;if(o.find("gml\\:point").length>0){var r=o.find("gml\\:point").find("gml\\:coordinates").text().split(",");l=new L.LatLng(parseFloat(r[1]),parseFloat(r[0]))}else if(o.find("gml\\:multilinestring").length>0){var r=o.find("gml\\:multilinestring").find("gml\\:linestringmember").find("gml\\:linestring").find("gml\\:coordinates").text().split(" ");r=$.map(r,function(e,t){var a=e.split(",");return[[parseFloat(a[0]),parseFloat(a[1])]]});var s=[{type:"LineString",coordinates:r}];l=new L.GeoJSON(s,{})}var d={featuretype:n,attributes:i,geometry:l};a.push(d)}),a},geosite.codec.parseAttributes=function(e,t){for(var a={},n=0;n<t.length;n++){var i=t[n],o=i.output||i.attribute;a[o]=void 0;var l=i.attribute||i.input,r=void 0!=l?[l]:i.inputs;if(void 0!=r)for(var s=0;s<r.length;s++){var l=r[s];if(e.find("geonode\\:"+l).length>0){a[o]=e.find("geonode\\:"+l).text();break}}}return a},geosite.popup={},geosite.popup.buildChart=function(e,t,a,n){var i="";return i+='<div style="text-align:center;"><b>'+e.label+"</b></div><br>",i+='<div id="'+e.id+'" class="geosite-popup-chart"></div>'},geosite.popup.buildField=function(e,t,a,n){var i=e.output||e.attribute,o=void 0,l=!1;if(void 0!=e.when&&"defined"==e.when.toLowerCase()?void 0!=a.attributes[i]&&(l=!0):l=!0,l)if("link"==e.type){var r=void 0!=e.value?e.value:"{{ feature.attributes."+i+" }}";o="<span><b>"+e.label+':</b> <a target="_blank" href="'+e.url+'">',o+=r,o+="</a></span>"}else{var r=void 0;if(void 0!=e.value)r=e.value;else{if("date"==e.type){var s=e.format||"medium";r="feature.attributes."+i+" | date:'"+s+"'"}else r="feature.attributes."+i;e.fallback&&(r="("+r+") || '"+e.fallback+"'"),r="{{ "+r+" }}"}o="<span><b>"+e.label+":</b> "+r+"</span>"}return o},geosite.popup.buildPopupTemplate=function(e,t,a,n){var i=e.panes,o="";angular.isDefined(e.title)&&(o+='<h5 style="word-wrap:break-word;text-align:center;">'+e.title+"</h5>");for(var l=[],r=0;r<i.length;r++){var s=i[r],d=[],c=[];if("fields"in s)for(var g=0;g<s.fields.length;g++){var p=geosite.popup.buildField(s.fields[g],t,a,n);void 0!=p&&d.push(p)}if("charts"in s)for(var g=0;g<s.charts.length;g++){var u=geosite.popup.buildChart(s.charts[g],t,a,n);void 0!=u&&c.push(u)}var f=d.join("<br>");c.length>0&&(f+="<hr>"+c.join("<br>")),l.push(f)}if(i.length>1){var m=[],s=i[0],v='<li class="active"><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>";m.push(v);for(var r=1;r<i.length;r++)s=i[r],v='<li><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>",m.push(v);var y='<ul class="nav nav-tabs nav-justified">'+m.join("")+"</ul>",b=[],h='<div id="'+i[0].id+'" class="tab-pane fade in active">'+l[0]+"</div>";b.push(h);for(var r=1;r<i.length;r++)h='<div id="'+i[r].id+'" class="tab-pane fade">'+l[r]+"</div>",b.push(h);o+=y+'<div class="tab-content">'+b.join("")+"</div>"}else o+=l[0];return o},geosite.popup.buildPopupContent=function(e,t,a,n){var i=geosite.popup.buildPopupTemplate(t.popup,t,a,n),o={layer:t,feature:a,state:n};return e(i)(o)},geosite.popup.openPopup=function(e,t,a,n,i,o){var l=geosite.popup.buildPopupContent(e,t,a,o),r=new L.Popup({maxWidth:t.popup.maxWidth||400},void 0);r.setLatLng(new L.LatLng(n.lat,n.lon)),r.setContent(l),i.openPopup(r)},geosite.tilemath={D2R:Math.PI/180,R2D:180/Math.PI},geosite.tilemath.point_to_bbox=function(e,t,a,n){var i=geosite.tilemath.point_to_radius(a),o=e+i;void 0!=n&&n>=0&&(o=o.toFixed(n));var l=e-i;void 0!=n&&n>=0&&(l=l.toFixed(n));var r=t-i;void 0!=n&&n>=0&&(r=r.toFixed(n));var s=t+i;return void 0!=n&&n>=0&&(s=s.toFixed(n)),[l,r,o,s]},geosite.tilemath.point_to_radius=function(e){return(geosite.config.click_radius||4)/e},geosite.tilemath.tms_to_bbox=function(e,t,a){var n=geosite.tilemath.tile_to_lon(e+1,a),i=geosite.tilemath.tile_to_lon(e,a),o=geosite.tilemath.tile_to_lat(t+1,a),l=geosite.tilemath.tile_to_lat(t,a);return[i,o,n,l]},geosite.tilemath.tile_to_lon=function(e,t){return e/Math.pow(2,t)*360-180},geosite.tilemath.tile_to_lat=function(e,t){return n=Math.pi-2*Math.PI*e/Math.pow(2,t),R2D*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))},geosite.http={},geosite.http.build_promises=function(e,t){for(var a=[],n=0;n<t.length;n++){var i=t[n],o={},l=e.get(i,o);a.push(l)}return a},geosite.http.build_features=function(e,t){for(var a=[],n=0;n<e.length;n++){var i=e[n];if(200==i.status){var o=i.data;a=a.concat(geosite.codec.parseFeatures(o,t))}}return a},geosite.layers={},geosite.layers.aggregate_fields=function(e){for(var t=[],a=0;a<e.popup.panes.length;a++)t=t.concat(e.popup.panes[a].fields);return t},geosite.layers.init_baselayers=function(e,t){for(var a={},n=0;n<t.length;n++){var i=t[n];try{a[i.id]=L.tileLayer(i.source.url,{id:i.id,attribution:i.source.attribution})}catch(o){console.log("Could not add baselayer "+n)}}return a},geosite.layers.init_featurelayer_post=function(e,t,a,n,i){void 0!=n?((void 0!=i?i:!0)&&n.addTo(t.map),geosite.api.intend("layerLoaded",{type:"featurelayer",layer:a,visible:i},e)):console.log("Could not add featurelayer "+a+" because it is undefined.")},geosite.layers.init_featurelayer_wms=function(e,t,a,n,i){var o=i.wms,l=L.tileLayer.wms(o.url,{renderOrder:$.inArray(n,a.renderlayers),buffer:o.buffer||0,version:o.version||"1.1.1",layers:o.layers.join(","),styles:o.styles?o.styles.join(","):"",format:o.format,transparent:o.transparent||!1,attribution:i.source.attribution});t.featurelayers[n]=l,geosite.layers.init_featurelayer_post(e,t,n,l,i.visible)},geosite.layers.init_featurelayer_geojson=function(e,t,a,n,i){$.ajax({url:i.source.url,dataType:"json",success:function(a){var o=void 0;if("heatmap"==i.transform){for(var l=[],r=0,s=0;s<a[0].features.length;s++){var d="attribute"in i.heatmap&&""!=i.heatmap.attribute?a[0].features[s].properties[i.heatmap.attribute]:1;l.push([a[0].features[s].geometry.coordinates[1],a[0].features[s].geometry.coordinates[0],d]),d>r&&(r=d)}for(var s=0;s<l.length;s++)l[s][2]=l[s][2]/r;var c=L.heatCanvas();o=L.heatLayer(l,{renderer:c,attribution:i.source.attribution,radius:i.heatmap.radius||25,blur:i.heatmap.blur||15,max:i.heatmap.max||1,minOpacity:i.heatmap.minOpacity||.5})}else o=L.geoJson(a,{attribution:i.source.attribution});t.featurelayers[n]=o,geosite.layers.init_featurelayer_post(e,t,n,o,i.visible)}})},geosite.layers.init_featurelayer=function(e,t,a,n,i){void 0!=t.enabled&&1!=t.enabled||("geojson"==t.type.toLowerCase()?geosite.layers.init_featurelayer_geojson(a,n,i,e,t):"wms"==t.type.toLowerCase()&&geosite.layers.init_featurelayer_wms(a,n,i,e,t))},geosite.layers.init_featurelayers=function(e,t,a,n){$.each(e,function(e,i){geosite.layers.init_featurelayer(e,i,t,a,n)})};var geositeserver={};geositeserver.welcome=function(e){e=e||{};var t=e.$scope||e.scope||angular.element("#geosite-main").scope(),a={id:"geositeserver-modal-welcome",modal:{backdrop:"static",keyboard:!1},dynamic:{},"static":{welcome:t.map_config.welcome}};geosite.api.intend("toggleModal",a,t)},geosite.config={click_radius:2},geosite.init_dashboard=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geosite.init.listeners(),geosite.init_controller_base(app),init_geositeserver_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},geosite.init_explore=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{}}}),geosite.init.listeners(),geosite.init_controller_base(app),init_geositeserver_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},geosite.templates={},geosite.templates["modal_dashboard_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">Dashboard Config / {{ map_config.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-dashboard-config-formatted"\n              aria-controls="modal-dashboard-config-formatted"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Formatted</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-dashboard-config-json"\n              aria-controls="modal-dashboard-config-json"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">JSON</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-dashboard-config-yaml"\n              aria-controls="modal-dashboard-config-yaml"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">YAML</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-dashboard-config-formatted"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n          </div>\n          <div\n            id="modal-dashboard-config-json"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ map_config | json }}</pre>\n          </div>\n          <div\n            id="modal-dashboard-config-yaml"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ map_config | yaml }}</pre>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geosite-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layerID }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              data-intent-ctrl="geosite-map-legend"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geosite-symbol-graduated\n              style="style"\n              container-width="{{ \'392px\' }}">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geosite-symbol-circle\n              style="style">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geosite-symbol-graphic\n              style="style">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-layer-more-general"\n              aria-controls="modal-layer-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-attributes"\n              aria-controls="modal-layer-more-attributes"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Attributes</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-source"\n              aria-controls="modal-layer-more-source"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Source</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wms"\n              aria-controls="modal-layer-more-wms"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WMS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wfs"\n              aria-controls="modal-layer-more-wfs"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WFS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-download"\n              aria-controls="modal-layer-more-download"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Download</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-layer-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ layer.type }}\n            <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-attributes"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div>\n              Placeholder\n            </div>\n          </div>\n          <div\n            ng-if="layer.source"\n            id="modal-layer-more-source"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Name:</b> {{ layer.source.name | default:"Not specified" }}</span><br>\n            <span><b>Attribution:</b> {{ layer.source.attribution | default:"Not specified" }}</span><br>\n            <span><b>URL:</b> {{ layer.source.url | default:"Not specified" }}</span><br>\n          </div>\n          <div\n            ng-if="layer.wms"\n            id="modal-layer-more-wms"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wms.url | default:"Not specified" }}</span><br>\n            <span><b>Layers:</b> {{ layer.wms.layers|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Styles:</b> {{ layer.wms.styles|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Format:</b> {{ layer.wms.format | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wms.version | default:"Not specified" }}</span><br>\n            <span><b>Transparent:</b> {{ layer.wms.transparent | default:"No" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetCapabilities">Capabilities</a><br>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetLegendGraphic&format=image/png&layer={{ layer.wms.layers|first }}">Legend Graphic</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-wfs"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wfs.url | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wfs.version | default:"Not specified" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer | url_describefeaturetype }}">Describe Feature Type</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-download"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Download Shapefile</b>: <a target="_blank" href="{{ layer | url_shapefile }}">All</a>, <a target="_blank" href="{{ layer | url_shapefile:state }}">Current Extent</a><br>\n            <span><b>Download GeoJSON</b>: <a target="_blank" href="{{ layer | url_geojson }}">All</a>, <a target="_blank" href="{{ layer | url_geojson:state }}">Current Extent</a><br>\n            <span><b>Download Google Earth KML</b>: <a target="_blank" href="{{ layer | url_kml }}">All</a>, <a target="_blank" href="{{ layer | url_kml:state }}">Current Extent</a><br>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li class="active" role="presentation">\n            <a href="#modal-layer-config-input"\n              aria-controls="modal-layer-config-input"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Configure</a>\n          </li>\n          <li class="" role="presentation">\n            <a href="#modal-layer-config-output"\n              aria-controls="modal-layer-config-output"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Output</a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            id="modal-layer-config-input"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Title</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Title</label>\n                <input\n                  id="layer-config-title"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.title"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.title }}">\n              </div>\n            </div>\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Description</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Description</label>\n                <input\n                  id="layer-config-description"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.description"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.Description }}">\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-layer-config-output"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            {{ layer | json }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',
geosite.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n      cx="50%"\n      cy="50%"\n      ng-r="{{ style.legend.symbol.radius }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_ellipse.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <ellipse\n      cx="50%"\n      cy="50%"\n      ng-rx="{{ style.legend.symbol.width }}"\n      ng-ry="{{ style.legend.symbol.height }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_graduated.tpl.html"]='<div>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.left | md2html"></div>\n  <svg\n    ng-attr-width="{{ containerWidth }}"\n    height="90px"\n    version="1.0"\n    xmlns="http://www.w3.org/2000/svg">\n    <g>\n      <rect\n        ng-repeat="color in style.colors.ramp track by $index"\n        ng-attr-x="{{ style.colors.ramp | length | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ \'0\' }}"\n        ng-attr-width="{{ style.colors.ramp | length | width_x : containerWidth : 26 }}px"\n        height="50px"\n        ng-attr-fill="{{ color }}"\n        stroke-width="1"\n        stroke="#000000"/>\n    </g>\n    <g>\n      <text\n        ng-repeat="breakpoint in style | breakpoints track by $index"\n        ng-attr-x="{{ style | breakpoints | length | add: -1 | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ $index | choose : 68 : 82 }}px"\n        text-anchor="middle"\n        ng-attr-fill="{{ \'black\' }}"\n        font-size="14px"\n        text-decoration="underline"\n        font-family="\'Open Sans\', sans-serif">{{ style | breakpoint: $index | formatBreakpoint }}</text>\n    </g>\n  </svg>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.right | md2html"></div>\n</div>\n',geosite.templates["symbol_graphic.tpl.html"]='<i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n',geosite.templates["legend_baselayers.tpl.html"]='<div class="geosite-map-legend-baselayers geosite-radio-group">\n  <div\n    ng-repeat="layer in map_config.baselayers track by $index"\n    ng-if="layer.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;baselayers&quot;,&quot;{{ $index }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n           <a\n             ng-class=" $first ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio geosite-on\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio\'"\n             data-intent-name="switchBaseLayer"\n             data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n             data-intent-class-on="geosite-on"\n             data-intent-class-off=""\n             data-intent-ctrl="geosite-map-legend">\n             <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n           </a>\n         </div><!--\n      --><div class="geosite-map-legend-item-symbol" style="width: 10px;"></div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div\n        class="geosite-map-legend-item-label"\n        style="{{ layer.id | layer_is_visible : state | ternary : \'width: 100%;\' : \'width: 100%;opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["legend_featurelayers.tpl.html"]='<div class="geosite-map-legend-featurelayers">\n  <div\n    ng-repeat="layer in featurelayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.item.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.key }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-config" style="display:none;">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-config&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-cog"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n         <a\n           ng-class="(layer.item.visible != undefined ? layer.item.visible : true ) ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle geosite-off\'"\n           data-intent-names="[&quot;showLayer&quot;,&quot;hideLayer&quot;]"\n           data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}"\n           data-intent-ctrl="geosite-map-legend">\n           <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n         </a>\n     </div><!--\n     --><div\n          ng-class="layer.item.type == \'geojson\' ? \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto\': \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto fade disabled\'">\n        <a\n          class="geosite-map-legend-item-zoomto-button geosite-intent"\n          data-intent-name="zoomToLayer"\n          data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-compress"></i>\n        </a>\n      </div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div\n        ng-if="layer.item.cartography[0].legend.symbol"\n        class="geosite-map-legend-item-symbol">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-carto&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'circle\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <circle\n                cx="50%"\n                cy="50%"\n                ng-r="{{ layer.item.cartography[0].legend.symbol.radius }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'ellipse\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <ellipse\n                cx="50%"\n                cy="50%"\n                ng-rx="{{ layer.item.cartography[0].legend.symbol.width }}"\n                ng-ry="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graduated\'">\n            <svg\n              ng-attr-width="{{ layer.item.cartography[0].legend.symbol.width }}"\n              height="100%"\n              version="1.0"\n              xmlns="http://www.w3.org/2000/svg">\n              <rect\n                ng-repeat="color in layer.item.cartography[0].colors.ramp track by $index"\n                ng-attr-x="{{ $index|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                y="0"\n                ng-attr-width="{{ 1|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                ng-attr-height="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-attr-fill="{{ color }}"\n                stroke-width="1"\n                stroke="#000000"/>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graphic\'">\n            <i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n          </div>\n        </a>\n      </div><!--\n      --><div\n           class="geosite-map-legend-item-label"\n           style="{{ layer.key | layer_is_visible : state | ternary : \'\' : \'opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.item.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_welcome.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-general"\n              aria-controls="modal-welcome-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.general | md2html | default:\'No body given.\'"></span>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_about.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">{{ about.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in about.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in about.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_download.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">{{ download.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in download.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in download.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_welcome_geositeserver.tpl.html"]='<div class="modal-dialog" data-backdrop="static" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-intro"\n              aria-controls="modal-welcome-intro"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Introduction</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-intro"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              class="welcome-body"\n              ng-bind-html="welcome.intro | md2html | default:\'No body given.\'"></span>\n            <hr>\n            <h3 class="welcome-body">Get Started: Select a dashboard!</h3>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="dashboard-input-backend"\n                name="dashboard-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="dashboard">\n              <span class="input-group-addon" id="dashboard-addon">Dashboard</span>\n              <input\n                id="dashboard-input"\n                name="dashboard-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:400px; height: auto;"\n                placeholder="dashboard (e.g., CAR Operation, GIS Presence, WFP Facilities, etc.)"\n                aria-describedby="dashboard-addon"\n                data-placeholder="dashboard (e.g., CAR Operation, GIS Presence, WFP Facilities, etc.)"\n                data-initial-data="dashboards_typeahead"\n                data-backend="dashboard-input-backend"\n                data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find dashboard</div>">\n                <div class="input-group-addon btn btn-danger btn-clear" data-clear="#dashboard-input">\n                  <i class="fa fa-times"></i>\n                </div>\n            </div>\n            <hr>\n            <ul class="nav nav-justified welcome-go">\n              <li>\n                <a\n                  ng-disabled="dashboard == undefined || dashboard == \'\'"\n                  ng-class="dashboard == undefined || dashboard == \'\'  ? \'btn btn-default\' : \'btn btn-primary\' "\n                  ng-href="{{ dashboard == undefined || dashboard == \'\' ? \'#\' : \'/dashboard/\'+dashboard }}">Go!</a>\n              </li>\n            </ul>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["dashboard_editor.tpl.html"]='<div class="geosite-dashboard-editor">\n  <h3 style="word-wrap:break-word;text-align:center;">Editor</h3>\n  <hr>\n  <form novalidate class="form-horizontal simple-form">\n    <ul class="nav nav-tabs nav-justified" role="tablist">\n      <li\n        ng-repeat="pane in editor.panes track by $index"\n        ng-init="paneIndex = $index"\n        role="presentation"\n        ng-class="$first ? \'active\' : \'\'">\n        <a\n          href="#{{ pane.id }}"\n          aria-controls="{{ pane.id }}"\n          role="tab"\n          data-toggle="tab"\n          style="padding-left:8px; padding-right: 8px; height: 62px;"\n          ng-bind-html=" pane.label | md2html"></a>\n      </li>\n    </ul>\n    <div class="tab-content">\n      <div\n        ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n        ng-repeat="pane in fields_by_pane track by $index"\n        ng-init="paneIndex = $index"\n        id="{{ pane.id }}"\n        role="tabpanel"\n        style="padding: 10px;">\n        <div\n          ng-repeat="field in pane.fields track by $index"\n          ng-init="field_flat = (field | replace : \'.\' : \'__\')"\n          ng-init="fieldIndex = $index"\n          class="form-group"\n          style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n          <div\n            ng-if="map_config_schema | extract : field : \'type\' | inArray: [\'text\', \'string\', \'markdown\', \'md\']">\n            <div class="col-md-3"><h5>{{ map_config_schema | extract : field : \'label\' }}</h5></div>\n            <div class="col-md-9">\n              <label for="editor-field-{{ field | replace : \'.\' : \'__\' }}" class="sr-only control-label" ng-bind-html="map_config_schema | extract : field : \'label\'"></label>\n                <div\n                  ng-if="map_config_schema | extract : field : \'multiline\' | default_if_undefined: \'false\' | inArray: [false, \'false\', \'no\', 0]"\n                  class="input-group">\n                  <input\n                    id="editor-field-{{ field | replace : \'.\' : \'__\' }}"\n                    name="editor-field-{{ field | replace : \'.\' : \'__\' }}"\n                    type="text"\n                    class="form-control"\n                    placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n                    data-geosite-field-type="{{ map_config_schema | extract : field : \'type\' }}"\n                    ng-required="map_config_schema | extract : field : \'required\'"\n                    ng-value="map_config_flat | extract : field_flat"\n                    ng-model="map_config_flat[field_flat]"\n                    ng-change="validateField(field_flat)">\n                  <a\n                    class="geosite-intent input-group-addon btn btn-primary btn-edit"\n                    href="#"\n                    data-intent-name="toggleModal"\n                    data-intent-data="{&quot;id&quot;:&quot;geosite-modal-edit-field&quot;,&quot;static&quot;:{&quot;field&quot;:&quot;{{ field }}&quot;,&quot;field_flat&quot;:&quot;{{ field_flat }}&quot;},&quot;dynamic&quot;:{&quot;value_edit_field&quot;:[&quot;source&quot;,&quot;map_config_flat&quot;,&quot;{{ field_flat }}&quot;],&quot;map_config_schema&quot;:[&quot;source&quot;,&quot;map_config_schema&quot;],&quot;map_config_schema_flat&quot;:[&quot;source&quot;,&quot;map_config_schema_flat&quot;]}}"\n                    data-intent-ctrl="geosite-sidebar-right">\n                    <i class="fa fa-pencil-square-o "></i>\n                  </a>\n                  <div\n                    class="input-group-addon btn btn-danger btn-clear"\n                    data-clear="#editor-field-{{ field | replace : \'.\' : \'__\' }}">\n                    <i class="fa fa-times"></i>\n                  </div>\n              </div>\n              <div\n                ng-if="map_config_schema | extract : field : \'multiline\' | default_if_undefined: \'false\' | inArray: [true, \'true\', \'yes\', 1]"\n                class="input-group">\n                <textarea\n                  id="editor-field-{{ field | replace : \'.\' : \'__\' }}"\n                  name="editor-field-{{ field | replace : \'.\' : \'__\' }}"\n                  class="form-control"\n                  placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n                  rows="5"\n                  data-geosite-field-type="{{ map_config_schema | extract : field : \'type\' }}"\n                  ng-required="map_config_schema | extract : field : \'required\'"\n                  style="max-width: 100%;"\n                  ng-model="map_config_flat[field_flat]"\n                  ng-change="validateField(field_flat)"\n                  ng-bind-html="map_config_flat | extract : field_flat"></textarea>\n                <a\n                  class="geosite-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{&quot;id&quot;:&quot;geosite-modal-edit-field&quot;,&quot;static&quot;:{&quot;field&quot;:&quot;{{ field }}&quot;,&quot;field_flat&quot;:&quot;{{ field_flat }}&quot;},&quot;dynamic&quot;:{&quot;value_edit_field&quot;:[&quot;source&quot;,&quot;map_config_flat&quot;,&quot;{{ field_flat }}&quot;],&quot;map_config_schema&quot;:[&quot;source&quot;,&quot;map_config_schema&quot;],&quot;map_config_schema_flat&quot;:[&quot;source&quot;,&quot;map_config_schema_flat&quot;]}}"\n                  data-intent-ctrl="geosite-sidebar-right">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  data-clear="#editor-field-{{ field | replace : \'.\' : \'__\' }}">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n            </div>\n            <div ng-show="form.$submitted || form.{{ field }}.$touched">\n              <span ng-show="form.{{ field }}.$error.required">{{ map_config_schema | extract : field : \'label\' }} is required.</span>\n            </div>\n          </div>\n          <div\n            ng-if="map_config_schema | extract : field : \'type\' | inArray: [\'int\', \'integer\']">\n            <div class="col-md-3"><h5>{{ map_config_schema | extract : field : \'label\' }}</h5></div>\n            <div class="col-md-9">\n              <label for="editor-field-{{ field }}" class="sr-only control-label" ng-bind-html="map_config_schema | extract : field : \'label\'"></label>\n              <div class="input-group">\n                <input\n                  id="editor-field-{{ field_flat }}"\n                  name="editor-field-{{ field_flat }}"\n                  type="number"\n                  class="form-control"\n                  placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n                  data-geosite-field-type="{{ map_config_schema | extract : field : \'type\' }}"\n                  ng-required="map_config_schema | extract : field : \'required\'"\n                  ng-attr-min="{{ map_config_schema | extract : field : \'minValue\' | default_if_undefined: \'\' }}"\n                  ng-attr-max="{{ map_config_schema | extract : field : \'maxValue\' | default_if_undefined: \'\' }}"\n                  ng-value="map_config_flat | extract : field_flat"\n                  ng-model="map_config_flat[field_flat]"\n                  ng-change="validateField(field_flat)">\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  data-clear="#editor-field-{{ field_flat }}">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n            </div>\n            <div ng-show="form.$submitted || form.{{ field }}.$touched">\n              <span ng-show="form.{{ field }}.$error.required">{{ map_config_schema | extract : field : \'label\' }} is required.</span>\n            </div>\n          </div>\n          <div\n            ng-if="map_config_schema | extract : field : \'type\' | inArray: [\'boolean\', \'checkbox\']"\n            class="col-sm-offset-2 col-sm-10">\n            <div class="checkbox">\n              <label>\n                <input\n                  type="checkbox"\n                  ng-checked="map_config | extract : field"> {{ map_config_schema | extract : field : \'label\' }}\n              </label>\n            </div>\n          </div>\n          <div\n            ng-if="map_config_schema | extract : field : \'type\' | inArray: [\'stringarray\', \'textarray\']"\n            class="col-sm-offset-2 col-sm-10">\n            <div\n              id="editor-field-{{ field_flat }}-label"\n              class="col-md-3"><h5>{{ map_config_schema | extract : field : \'label\' }}</h5></div>\n            <div\n              class="col-md-9"\n              ng-bind-html="map_config | extract : field | formatArray">\n              <div class="input-group">\n                <input\n                  id="editor-field-{{ field_flat }}-backend"\n                  name="editor-field-{{ field_flat }}-backend"\n                  type="text"\n                  class="form-control"\n                  style="display:none;"\n                  ng-value="map_config_flat | extract : field_flat"\n                  ng-model="map_config_flat[field_flat]"\n                  ng-change="validateField(field_flat)">\n                <input\n                  id="editor-field-{{ field_flat }}"\n                  name="editor-field-{{ field_flat }}"\n                  type="text"\n                  class="typeahead form-control"\n                  style="width:400px; height: auto;"\n                  placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n                  data-placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n                  data-geosite-field-type="{{ map_config_schema | extract : field : \'type\' }}"\n                  ng-required="map_config_schema | extract : field : \'required\'"\n                  aria-describedby="editor-field-{{ field_flat }}-label"\n                  data-initial-data=""\n                  data-backend="editor-field-{{ field_flat }}-backend"\n                  data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find value</div>">\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  data-clear="#editor-field-{{ field | replace : \'.\' : \'__\' }}">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class="form-group">\n      <div class="col-sm-offset-2 col-sm-10">\n        <button type="submit" class="btn btn-primary">Save</button>\n        <button type="submit" class="btn btn-default">Reset</button>\n        <a\n          class="geosite-intent btn btn-primary"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-dashboard-config&quot;,&quot;dynamic&quot;:{&quot;map_config&quot;:&quot;map_config&quot;}}"\n          data-intent-ctrl="geosite-sidebar-right">\n          <i class="fa fa-code"></i>\n        </a>\n      </div>\n    </div>\n  </form>\n</div>\n',geosite.templates["modal_edit_field.tpl.html"]='<div class="modal-dialog" role="document">\n  <div\n    ng-if="field_flat | default_if_undefined: false"\n    class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4\n        id="myModalLabel"\n        class="modal-title"\n        ng-bind-html="map_config_schema | extract : field : \'label\' | prepend : \'Edit / \' | md2html"></h4>\n    </div>\n    <div class="modal-body">\n      <ul class="nav nav-tabs nav-justified" role="tablist">\n        <li role="presentation" class="active">\n          <a\n            href="#modal-edit-field-pane-input"\n            aria-controls="modal-edit-field-pane-input"\n            role="tab"\n            data-toggle="tab"\n            style="padding-left:8px; padding-right: 8px; height: 62px;">Input</a>\n        </li>\n        <li role="presentation" class="">\n          <a\n            href="#modal-edit-field-pane-preview"\n            aria-controls="modal-edit-field-pane-preview"\n            role="tab"\n            data-toggle="tab"\n            style="padding-left:8px; padding-right: 8px; height: 62px;">Preview</a>\n        </li>\n      </ul>\n      <div class="tab-content">\n        <div\n          id="modal-edit-field-pane-input"\n          role="tabpanel"\n          class="tab-pane fade"\n          style="padding: 10px;">\n          <textarea\n            id="modal-edit-field-{{ field_flat }}"\n            name="modal-edit-field-{{ field_flat }}"\n            class="form-control"\n            placeholder="{{ map_config_schema | extract : field : \'placeholder\' }}"\n            rows="15"\n            data-geosite-field-type="{{ map_config_schema | extract : field : \'type\' }}"\n            ng-required="map_config_schema | extract : field : \'required\'"\n            style="max-width: 100%;"\n            ng-model="value_edit_field"\n            ng-change="validateModalField(field_flat)"></textarea>\n        </div>\n        <div\n          id="modal-edit-field-pane-preview"\n          role="tabpanel"\n          class="tab-pane fade"\n          style="padding: 10px;">\n          <pre\n            style="word-wrap: break-word; white-space: pre-wrap;"\n            ng-bind-html="value_edit_field | md2html"\n          ></pre>\n        </div>\n      </div>\n      <hr>\n      <div\n        class="btn btn-danger btn-clear"\n        data-clear="#modal-edit-field-{{ field_flat }}, #editor-field-{{ field_flat }}">\n        <i class="fa fa-times"></i>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n';
var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,t){return{num:e,short3:MONTHS_SHORT3[t],"long":MONTHS_LONG[t]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];geosite.filters["default"]=function(){return function(e,t){return e||t}},geosite.filters.join=function(){return function(e,t){return Array.isArray(e)?e.join(t):e}},geosite.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geosite.filters.last=function(){return function(e){if(!Array.isArray(e))return e;if(0!=e.length)return e[e.length-1]}},geosite.filters.formatInteger=function(){return function(e,t,a){if(void 0!=e&&""!==e){if("delimited"==t){a=a||",";for(var n=Math.round(e).toString(),i=new RegExp("(\\d+)(\\d{3})","gi");i.test(n);)n=n.replace(i,"$1"+a+"$2");return n}return Math.round(e).toString()}return""}},geosite.filters.formatArray=function(){return function(e){return Array.isArray(e)?0==e.length?"":1==e.length?e[0]:2==e.length?e.join(" and "):e.slice(0,-1).join(", ")+", and "+e[e.length-1]:e}},geosite.filters.formatMonth=function(){return function(e,t){return void 0!=e&&""!==e?"long"==t?months_long[e-1]:"short3"==t||"short_3"==t?months_short_3[e-1]:"int2"==t&&10>e?"0"+e.toString():e.toString():""}},geosite.filters.md2html=function(){return function(e){if(void 0!=e){var t=new showdown.Converter;html=t.makeHtml(e),html=html.substring("<p>".length,html.length-"</p>".length);var a=new RegExp("(<a .*)>(.*?)</a>","gi");return html=html.replace(a,'$1 target="_blank">$2</a>'),html=html.replace(new RegExp("\n","gi"),"<br>"),html}return""}},geosite.filters.percent=function(){return function(e,t){return 100*e/t}},geosite.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geosite.filters.as_float=function(){return function(e){return 1*e}},geosite.filters.choose=function(){return function(e,t){if(Array.isArray(t)){var a=t;return e+a[e%a.length]}var a=Array.prototype.slice.call(arguments,[1]);return a[e%a.length]}},geosite.filters.add=function(){return function(e,t){if(Array.isArray(t)){var a=t;return e+a[e%a.length]}if(arguments.length>2){var a=Array.prototype.slice.call(arguments,[1]);return e+a[e%a.length]}return e+t}},geosite.filters.default_if_undefined=function(){return function(e,t){return void 0!=e&&null!=e?e:t}},geosite.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geosite.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,t){return{key:t,item:e}})}},geosite.filters.sortItemsByArray=function(){return function(e,t){return $.isArray(e)?(e=$.grep(e,function(e,a){return-1!=$.inArray(e.key,t)}),e.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(e.key,t)}),e):e}},geosite.filters.url_shapefile=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.filters.url_geojson=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.filters.url_kml=function(){return function(e,t){var a="";if("kml"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={mode:"download",layers:n};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.kml.url+"?"+o}return a}},geosite.filters.url_describefeaturetype=function(){return function(e){var t="";if("wfs"in e){var a=e.wfs.version||"1.0.0",n={service:"WFS",request:"DescribeFeatureType",version:a,outputFormat:"application/json"},i="";"layers"in e.wms?i=e.wms.layers.unique().join(","):"layers"in e.wfs&&(i=e.wfs.layers.unique().join(",")),"1.1.0"==a||"1.0.0"==a?n.typeName=i:n.typeNames=i;var o=$.map(n,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+o}return t}},geosite.filters.breakpoint=function(){return function(e,t){var a=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=a&&a.length>0?a[t]:-1}},geosite.filters.breakpoints=function(){return function(e){var t=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=t&&t.length>0?t:[]}},geosite.filters.formatBreakpoint=function(){return function(e){return Number.isInteger(e)?geosite.filters.formatInteger()(e,"delimited"," "):$.isNumeric(e)?geosite.filters.formatFloat()(e,2):""+e}},geosite.filters.formatFloat=function(){return function(e,t){return void 0!=e&&""!==e?void 0!=t?e.toFixed(t):e.toString():""}},geosite.filters.position_x=function(){return function(e,t,a,n){var i=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},o=i(a)-2*n;return n+o*t/e}},geosite.filters.width_x=function(){return function(e,t,a){var n=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},i=n(t)-2*a;return i/e}},geosite.filters.len=geosite.filters.length=function(){return function(e){return $.isArray(e)?e.length:0}},geosite.filters.layer_is_visible=function(){return function(e,t){t=t||$("#geosite-main").scope().state;var a=t.view.featurelayers;return e==t.view.baselayer||-1!=$.inArray(e,a)}},geosite.filters.ternary=function(){return function(e,t,a){return e?t:a}},geosite.filters.extract=function(){var e=function(e,t){var a=void 0;if(0==e.length)a=t;else if(void 0!=t){var n=e.slice(1),i=Array.isArray(t)?t[e[0]]:t[""+e[0]];a=extract(n,i)}return a},t=function(e){for(var t=[],a=0;a<e.length;a++){var n=e[a];-1!=n.indexOf(".")?t=t.concat(n.split(".")):t.push(n)}return t};return function(a){var n=Array.prototype.slice.call(arguments,[1]);return n.length>0?e(t(n),a):null}},geosite.filters.inArray=function(){return function(e,t){return Array.isArray(t)?-1!=t.indexOf(e):!1}},geosite.filters.yaml=function(){return function(e){return void 0!=e?YAML.stringify(e,4):""}},geosite.filters.replace=function(){return function(e,t,a){return angular.isString(e)?angular.isString(t)&&angular.isString(a)?e.replace(t,a):e:""}},geosite.filters.prepend=function(){return function(e,t){if(Array.isArray(t)){var a=t;return a[e%a.length]+e}if(arguments.length>2){var a=Array.prototype.slice.call(arguments,[1]);return a[e%a.length]+e}return t+e}},geosite.directives.ngX=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngX,function(e){t.attr("x",e)})}}},geosite.directives.ngY=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngY,function(e){t.attr("y",e)})}}},geosite.directives.ngWidth=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngWidth,function(e){t.attr("width",e)})}}},geosite.directives.ngR=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngR,function(e){t.attr("r",e)})}}},geosite.directives.ngFill=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngFill,function(e){t.attr("fill",e)})}}},geosite.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,t,a){e.$emit(a.onRepeatDone||"repeat_done",{element:t,attributes:a})}}},geosite.directives.geositeModalDashboardConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_dashboard_config.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_carto.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_config.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",containerWidth:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalAbout=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_about.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalDownload=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_download.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeserverModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome_geositeserver.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeDashboardEditor=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"dashboard_editor.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalEditField=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_edit_field.tpl.html",link:function(e,t,a){}}},geosite.controllers.controller_base=function(e,t,a,n,i,o){},geosite.controllers.controller_modal=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));$(t);e.test="blah blah blah"},geosite.controllers.controller_legend=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.map_config=i,e.state=n,e.updateVariables=function(){var t=e.map_config.legendlayers,a=$.map(e.map_config.featurelayers,function(e,t){return{key:t,item:e}});a=$.grep(a,function(e,a){return-1!=$.inArray(e.key,t)}),a.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(a.key,t)}),e.featurelayers=a},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables),e.$watch("state",e.updateVariables);$(t);e.$on("refreshMap",function(t,a){console.log("args: ",a),e.$apply(function(){e.state=a.state})})},geosite.controllers.controller_map=function(e,t,a,n,i){};var highlightFeature=function(e){e.target},init_map=function(e){var t=L.map("map",{zoomControl:geosite.api.opt_b(e,"zoomControl",!1),minZoom:geosite.api.opt_i(e,"minZoom",3),maxZoom:geosite.api.opt_i(e,"maxZoom",18)});return t.setView([geosite.api.opt_i(e,["latitude","lat"],0),geosite.api.opt_i(e,["longitude","lon","lng","long"],0)],geosite.api.opt_i(e,["zoom","z"],0)),$.each(geosite.api.opt_j(e,"listeners"),function(e,a){t.on(e,a)}),t};geosite.controllers.controller_map_map=function(e,t,a,n,i,o,l,r,s){var d={click:function(e){var a=e.latlng,n={lat:a.lat,lon:a.lng};geosite.api.intend("clickedOnMap",n,t)},zoomend:function(e){var a={extent:s.map.getBounds().toBBoxString(),z:s.map.getZoom()};geosite.api.intend("viewChanged",a,t)},dragend:function(e){var a=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.api.intend("viewChanged",n,t)},moveend:function(e){var a=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.api.intend("viewChanged",n,t)}},c=(hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),l.view);s.map=init_map({zoomControl:r.controls.zoom,minZoom:r.view.minZoom,maxZoom:r.view.maxZoom,lat:c.lat,lon:c.lon,z:c.z,listeners:d});var g=geosite.layers.init_baselayers(s.map,r.baselayers);$.extend(s.baselayers,g);var p=r.baselayers[0].id;s.baselayers[p].addTo(s.map),geosite.api.intend("viewChanged",{baselayer:p},t),geosite.api.intend("layerLoaded",{type:"baselayer",layer:p},t),$.each(r.featurelayers,function(e,a){geosite.layers.init_featurelayer(e,a,t,s,r)}),$("#geosite-map-sidebar-toggle-right").click(function(){$(this).toggleClass("sidebar-open sidebar-right-open"),$("#geosite-sidebar-right, #geosite-map").toggleClass("sidebar-open sidebar-right-open"),setTimeout(function(){s.map.invalidateSize({animate:!0,pan:!1})},2e3)}),t.$on("refreshMap",function(e,t){console.log("Refreshing map...");var a=t.state.view.baselayer;$.each(s.baselayers,function(e,t){var n=e==a;s.map.hasLayer(t)&&!n?s.map.removeLayer(t):!s.map.hasLayer(t)&&n&&s.map.addLayer(t)});var n=t.state.view.featurelayers;$.each(s.featurelayers,function(e,t){var a=-1!=$.inArray(e,n);s.map.hasLayer(t)&&!a?s.map.removeLayer(t):!s.map.hasLayer(t)&&a&&s.map.addLayer(t)});var i=$.grep(layersAsArray(s.featurelayers),function(e){return-1!=$.inArray(e.id,n)}),o=sortLayers($.map(i,function(e,t){return e.layer}),!0),l=($.map(s.baselayers,function(e,t){return{id:t,layer:e}}),$.map($.grep(layersAsArray(s.baselayers),function(e){return e.id==a}),function(e,t){return e.layer}));updateRenderOrder(l.concat(o)),setTimeout(function(){s.map._onResize()},0)}),t.$on("changeView",function(e,t){console.log("Refreshing map..."),void 0!=t.layer&&s.map.fitBounds(s.featurelayers[t.layer].getBounds())}),t.$on("openPopup",function(e,t){console.log("Refreshing map..."),void 0!=t.featureLayer&&void 0!=t.feature&&void 0!=t.location&&geosite.popup.openPopup(i,t.featureLayer,t.feature,t.location,s.map,angular.element("#geosite-main").scope().state)})},geosite.controllers.controller_geositeserver_welcome=function(e,t,a,n,i,o,l){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),setTimeout(function(){$("#dashboard-input",t).each(function(){var e=$(this),t=(e.data("placeholder"),e.data("initialData")),a=(e.data("width"),e.data("height"),e.data("template-empty")),n=(e.data("template-suggestion"),new Bloodhound({identify:function(e){return e.text},datumTokenizer:function(e){return Bloodhound.tokenizers.whitespace(e.text)},queryTokenizer:Bloodhound.tokenizers.whitespace,local:geosite.initial_data.data[t]}));e.typeahead(null,{name:e.attr("name"),minLength:1,limit:10,hint:!1,highlight:!0,displayKey:"text",source:n,templates:{empty:a,suggestion:function(e){return"<p><strong>"+e.text+"</strong> - "+e.id+"</p>"},footer:function(e){return"<div>Searched for <strong>"+e.query+"</strong></div>"}}}).on("blur",function(e){var t=n.get($(this).val());$("#"+$(this).data("backend")).val(1==t.length?t[0].id:null).trigger("input").change()}).on("typeahead:change",function(e,t){console.log("Event: ",e,t);var a=n.get(t);$("#"+$(this).data("backend")).val(1==a.length?a[0].id:null).trigger("input").change()}).on("typeahead:select typeahead:autocomplete typeahead:cursorchange",function(e,t){console.log("Event: ",e,t);$("#"+$(this).data("backend")).val("id"in t?t.id:null).trigger("input").change()})}),geositeserver.welcome({scope:e})},10)},geosite.controllers.controller_sidebar_geositeserver=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.map_config=i,e.map_config_flat=geosite.api.flatten(e.map_config,void 0),e.editor=geosite.initial_data.data.editor,e.map_config_schema=geosite.initial_data.data.map_config_schema,e.map_config_schema_flat=geosite.api.flatten(e.map_config_schema,void 0),e.fields_by_pane={},e.value_edit_field=null,e.updateVariables=function(){for(var t=[],a=0;a<e.editor.panes.length;a++){var n=e.editor.panes[a],i=[];"fields"in n&&angular.isArray(n.fields)&&(i=i.concat(n.fields)),"section"in n&&n.section in e.map_config_schema&&(i=i.concat($.map(e.map_config_schema[n.section],function(e,t){return n.section+"."+t}))),t.push({id:n.id,fields:i})}e.fields_by_pane=t},e.updateVariables(),e.$watch("map_config",e.updateVariables),e.$watch("editor",e.updateVariables),e.$watch("map_config_schema",e.updateVariables);$(t);e.validateField=function(t){if(-1==t.indexOf("__"))e.map_config[t]=e.map_config_flat[t];else{for(var a=t.split("__"),n=e.map_config,i=0;i<a.length-1;i++){var o=a[i];o in n||(n[o]={}),n=n[o]}n[a[a.length-1]]=e.map_config_flat[t]}var l=$(this).data("geosite-field-type");console.log("type",l)},e.validateModalField=function(t){e.map_config_flat[t]=e.value_edit_field,e.validateField(t)}};var buildPageURL=function(e,t,a){var n=e(t.pages[a.page])(a),i=[],o=a.view;void 0!=o&&void 0!=o.z&&void 0!=o.lat&&void 0!=o.lon&&(i.push("z="+o.z),i.push("lat="+o.lat.toFixed(4)),i.push("lon="+o.lon.toFixed(4)));var l=a.filters;return l&&$.each(a.filters,function(e,t){$.each(t,function(t,a){i.push(e+":"+t+"="+a)})}),i.length>0&&(n+="#"+i.join("&")),n};geosite.controllers.controller_main=function(e,t,a,n,i,o,l,r,s,d){t.map_config=r,t.state=geosite.init_state(l,s),t.live=d,t.refreshMap=function(e){t.$broadcast("refreshMap",{state:e})},t.$on("toggleModal",geosite.listeners.toggleModal),t.$on("stateChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state=$.extend(n.state,a);var t=buildPageURL(e,r,n.state);history.replaceState(l,"",t),n.refreshMap(n.state)})}),t.$on("filterChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state.filters[a.layer]=$.extend(n.state.filters[a.layer],a.filter);var t=buildPageURL(e,r,n.state);history.replaceState(l,"",t),n.refreshMap(n.state)})}),t.$on("selectStyle",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state.styles[a.layer]=a.style;var t=buildPageURL(e,r,n.state);history.replaceState(l,"",t),n.refreshMap(n.state)})}),t.$on("viewChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.state.view=$.extend(n.state.view,a);var i=buildPageURL(e,r,n.state);history.replaceState(l,"",i)}),t.$on("layerLoaded",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.type,i=t.layer,o=void 0!=t.visible?t.visible:!0;"featurelayer"==n?o&&a.state.view.featurelayers.push(i):"baselayer"==n&&(a.state.view.baselayer=i)}),t.$on("showLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer;-1==$.inArray(n,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(n),a.refreshMap(a.state))}),t.$on("hideLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&(a.state.view.featurelayers.splice(i,1),a.refreshMap(a.state))}),t.$on("showLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=n[i];-1==$.inArray(o,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(o),a.refreshMap(a.state))}}),t.$on("hideLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=t.layers[i],l=$.inArray(o,a.state.view.featurelayers);-1!=l&&(a.state.view.featurelayers.splice(l,1),a.refreshMap(a.state))}}),t.$on("switchBaseLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view.baselayer=t.layer,a.refreshMap(a.state)}),t.$on("zoomToLayer",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&a.$broadcast("changeView",{layer:n})}),t.$on("clickedOnMap",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=a.state.view.z,l=a.state.view.featurelayers;console.log("visibleFeatureLayers",l);for(var s={},d={},c=[],g=0;g<l.length;g++){var p=r.featurelayers[l[g]];if(void 0!=p.wfs)for(var u={service:"wfs",version:p.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},f=new L.LatLng(t.lat,t.lon),m=geosite.tilemath.point_to_bbox(t.lon,t.lat,n,4).join(","),v=p.wfs.layers||p.wms.layers||[],y=0;y<v.length;y++){typeName=v[y];var b=p.wfs.url+"?"+$.param($.extend(u,{typeNames:typeName,bbox:m}));c.push(b),d[typeName.toLowerCase()]=geosite.layers.aggregate_fields(p),s[typeName.toLowerCase()]=p}}o.all(geosite.http.build_promises(i,c)).then(function(e){var t=geosite.http.build_features(e,d);if(console.log("Features: ",t),t.length>0){var n=geosite.vecmath.getClosestFeatureAndLocation(t,f),i=s[n.feature.featuretype];a.$broadcast("openPopup",{featureLayer:i,feature:n.feature,location:{lon:n.location.lng,lat:n.location.lat}})}})})};var init_geositeserver_controller_main=function(e,t){geosite.init_controller(e,t,geosite.controllers.controller_main);var a=[".geosite-controller.geosite-about",".geosite-controller.geosite-download",".geosite-controller.geosite-dashboard-config"].join(", ");geosite.init_controllers(e,t,[{selector:a,controller:geosite.controllers.controller_base}]),$(".geosite-controller.geosite-sidebar.geosite-sidebar-right",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_geositeserver),geosite.init_controllers(e,t,[{selector:".geosite-controller.geosite-controller-modal",controller:geosite.controllers.controller_base}])}),$(".geosite-controller.geosite-map",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_map),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-map-map",controller:geosite.controllers.controller_map_map},{selector:".geosite-controller.geosite-map-legend",controller:geosite.controllers.controller_legend},{selector:".geosite-controller.geositeserver-welcome",controller:geosite.controllers.controller_geositeserver_welcome}]),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-controller-modal",controller:geosite.controllers.controller_base}])})};